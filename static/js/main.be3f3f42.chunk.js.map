{"version":3,"sources":["components/Header.js","components/Nav.js","components/Login.js","utils/config.js","components/Product.js","components/Products.js","components/Aboutus.js","container/Shop.js","App.js","serviceWorker.js","utils/firebase-config.js","index.js"],"names":["Header","react_default","a","createElement","className","Nav","classNameName","href","src","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","activeClassName","to","Login","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msg","inherits","createClass","key","value","_this2","userid","refs","uid","userObject","pwd","firebase","ref","set","then","data","setState","catch","err","_this3","on","snapshot","val","updateLoginStatus","htmlFor","placeholder","onClick","doLogin","bind","add","doClear","React","Component","URLS","Product","style","item","url","name","price","Products","items","doAjax","fetch","response","json","console","log","error","map","itemObject","Product_Product","Aboutus","Shop","Header_Header","Nav_Nav","Switch","Route","path","exact","component","App","isLogin","loginState","arguments","length","undefined","Shop_Shop","Login_Login","isAuth","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","BrowserRouter","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be3f3f42.chunk.js","sourcesContent":["import React from 'react';\nexport const Header = () =>{\n    return(\n        <h1 className=\"alert-success\">Online Shop</h1>\n    );\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nexport const Nav =()=>{\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n<a classNameName=\"navbar-brand\" href=\"#\">\n    <img src=\"https://www.svgimages.com/svg-image/s7/amazon-logo-256x256.png\" width=\"30\" height=\"30\" classNameName=\"d-inline-block align-top\" alt=\"\"/>\n    Shopping\n  </a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/\">Items <span className=\"sr-only\">(current)</span></NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/about\">About Us</NavLink>\n      </li>\n      </ul>\n        </div>\n</nav>\n    );\n}","import React from  'react';\nimport * as firebase from 'firebase';\nexport class Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {msg:\"\"};\n    }\n    add(){\n        var userid = this.refs.uid.value;\n        var pwd = this.refs.pwd.value;\n        var userObject = {\"userid\":userid,\"pwd\":pwd};\n        var promise =  firebase.database().ref(\"users/\"+userid).set(userObject);\n        promise.then(data=>{\n            this.setState({msg:'User Added'})\n        }).catch(err=>{\n            this.setState({msg:'Error in User ID'});\n        })\n    }\n    doLogin(){\n        var userid = this.refs.uid.value;\n        var pwd = this.refs.pwd.value;\n        var user = firebase.database().ref(\"users/\"+userid);\n        user.on('value',(snapshot)=>{\n            var userObject =snapshot.val();\n            if(userObject.pwd==pwd){\n                this.setState({msg:\"Welcome\"+userid});\n                this.props.updateLoginStatus(true,userid)\n            }\n            else{\n                this.setState({\n                    msg:\"Invaid Username or Password\"\n                })\n                this.props.updateLoginStatus(false);\n            }\n        })\n        // if(userid==password){\n        //     this.setState({msg:'Welcome'+' '+userid});\n        //     this.props.updateLoginStatus(true,userid);\n        // }\n        // else{\n        //     this.setState({msg:\"Invalid Username or Password\"});\n        //     this.props.updateLoginStatus(false);\n        // }\n    }\n    doClear(){\n        this.refs.uid.value = \"\";\n        this.refs.pwd.value = \"\";\n        this.setState({msg:\"\"});\n    }\n    render(){\n        return(\n            <div>\n                <h2 className=\"alert-info\">Login Page</h2>\n                <h3 className=\"alert-success\">{this.state.msg}</h3>\n                <div className=\"form-group\">\n                <label htmlFor=\"userid\">Username :</label>\n                <input className=\"form-control\" type=\"text\" id=\"userid\" placeholder=\"Username\" ref=\"uid\"/>\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"password\">Password :</label>\n                <input className=\"form-control\" type=\"password\" placeholder=\"Password\" ref=\"pwd\"/>\n                </div>\n                <div className=\"form-group\">\n                 <button type=\"button\" onClick={this.doLogin.bind(this)} className=\"btn btn-primary\">Login</button>&nbsp;\n                 <button type=\"button\" className=\"btn btn-success\" onClick={this.add.bind(this)}>Register</button>&nbsp;\n                 <button type=\"button\" onClick={this.doClear.bind(this)} className=\"btn btn-danger\">Clear</button>\n                </div>  \n            </div>\n        )\n    }\n}","export const URLS={\n    \"mobile\":\"https://raw.githubusercontent.com/brainmentorspvtltd/myserverdata/master/mobiles.json\"\n}","import React from 'react';\nexport const Product =(props)=>{\n    const myStyle={width: \"18rem\"};\n    return(\n        <div className=\"row\">\n        <div className=\"col-sm-6\">\n        <div className=\"card\" style={myStyle}>\n  <img className=\"card-img-top\" src={props.item.url} alt=\"Card image cap\"/>\n  <div className=\"card-body\">\n    <h5 className=\"card-title\">{props.item.name}</h5>\n    <p className=\"card-text\">{props.item.price}</p>\n    <a href=\"#\" className=\"btn btn-primary\">Add to cart</a>\n  </div>\n </div></div>\n        <div className=\"col-sm-6\">\n        <h2>Product Details</h2>\n        </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport {Product} from './Product';\nimport {URLS} from '../utils/config';\n// export const Products = (props)=>{\n//     return (\n//         props.items.map(itemObject=><Product item={itemObject}/>)\n        \n//     )\n// }\nexport class Products extends React.Component{\n    constructor(){\n        super();\n        this.state = {items:[],err:{}};\n    }\n    componentDidMount () {\n        this.doAjax();\n      }\n    doAjax(){\n        fetch(URLS.mobile).then(response=>{\n            response.json().then(data=>{\n                 this.setState({items:data['mobiles']});\n                 console.log(\"Data is \",data['mobiles']); \n            }).catch(error=>{\n              this.setState({err:error});\n            })\n        }).catch(error=>{\n          this.setState({err:error});\n        });\n    }\n    render(){\n        return (\n                    this.state.items.map(itemObject=><Product item={itemObject}/>)\n                    \n                 )\n    }\n}","import React from 'react';\nexport const  Aboutus =(props)=> {\n  return (\n    <div>\n      <h1>About Us View..</h1>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Header} from '../components/Header';\nimport {Nav} from '../components/Nav';\nimport {URLS} from '../utils/config';\nimport {Products} from '../components/Products';\nimport {Switch} from 'react-router-dom';\nimport {Route} from 'react-router-dom';\nimport {Aboutus} from '../components/Aboutus';\nexport class Shop extends React.Component{\n    constructor(props){\n        super(props);\n        this.state=({items:[],err:{}});\n    }\n    // doAjax(){\n    //     fetch(URLS.mobile).then(response=>{\n    //         response.json().then(data=>{\n    //             this.setState({items:data['mobiles']});\n    //             console.log(\"Data is\",data['mobiles']);\n    //         }).catch(err=>{\n    //             this.setState({err:'error'});\n    //         });\n    //     }).catch(err=>{\n    //         this.setState({err:'error'});\n    //     });\n    // }\n//     componentWillMount(){\n\n//     }\n// componentDidMount(){\n// // this.doAjax();\n// }\n    render(){\n        return(\n            <div>\n                \n                <Header/>\n                <Nav/>\n                <h3>Welcome {this.props.userid}</h3>\n                <Switch>\n                    <Route path=\"/\" exact component={Products}/>\n                    <Route path=\"/about\" exact component={Aboutus}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n","// import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           <p>\n//             Edit <code>src/App.js</code> and save to reload.\n//           </p>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://reactjs.org\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             Learn React\n//           </a>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\nimport React from 'react';\nimport {Header} from './components/Header';\nimport {Nav} from './components/Nav';\nimport {Login} from './components/Login'\nimport {Shop} from './container/Shop';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nexport default class App extends React.Component{\n  constructor(){\n    super();\n    this.state = {isLogin:false,userid:''};\n  }\n  isAuth(loginState, uid=''){\n    this.setState({isLogin:loginState,userid:uid});\n  }\n  render(){\n    return(\n    <div className=\"container\">\n    {this.state.isLogin?<Shop userid={this.state.userid}/>:<Login updateLoginStatus={this.isAuth.bind(this)}/>}\n    \n    </div>);\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n\n  // Initialize Firebase\n  export const config = {\n    apiKey: \"AIzaSyBu5X9cnzHbFir807TAZN2fUgObJM-oBsw\",\n    authDomain: \"shop-6e532.firebaseapp.com\",\n    databaseURL: \"https://shop-6e532.firebaseio.com\",\n    projectId: \"shop-6e532\",\n    storageBucket: \"shop-6e532.appspot.com\",\n    messagingSenderId: \"691932377938\"\n  };\n  //firebase.initializeApp(config);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nimport {config} from './utils/firebase-config';\nimport {BrowserRouter} from 'react-router-dom';\nfirebase.initializeApp(config);\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}